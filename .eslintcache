[{"/home/gabriel/github-explorer-as7/src/reportWebVitals.js":"1","/home/gabriel/github-explorer-as7/src/index.js":"2","/home/gabriel/github-explorer-as7/src/App.js":"3","/home/gabriel/github-explorer-as7/src/services/api.js":"4"},{"size":362,"mtime":1606580081217,"results":"5","hashOfConfig":"6"},{"size":500,"mtime":1606580081217,"results":"7","hashOfConfig":"6"},{"size":1894,"mtime":1606585744408,"results":"8","hashOfConfig":"6"},{"size":117,"mtime":1606580304285,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pjbpu1",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gabriel/github-explorer-as7/src/reportWebVitals.js",[],"/home/gabriel/github-explorer-as7/src/index.js",[],"/home/gabriel/github-explorer-as7/src/App.js",["19","20"],"import logo from './logo.svg';\nimport './App.css';\nimport api from '../src/services/api';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [newRepo, setNewRepo] = useState('');\n  const [repositories, setRepositories] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleInputChange = e => {\n    setNewRepo(e.target.value)\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    setLoading(true)\n\n    const response = await api.get(`repos/${newRepo}`)\n    console.log(\"reees\", response)\n    const data = {\n      name: response.data.full_name,\n      avatar: response.data.owner.avatar_url,\n      description: response.data.description,\n      url: response.data.html_url,\n    };\n\n    setRepositories([...repositories, data])\n\n    setNewRepo('')\n    setLoading(false)\n\n  }\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n\n      <h1>Api do Github</h1>\n      <h2>Lista de Repositórios Publicos</h2>\n      <p>Busque por repositórios públicos. Exemplo: facebook/react, ou angular/angular, ou vuejs/vue, etc</p>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          placeholder=\"Adicionar repositório\"\n          value={newRepo}\n          onChange={handleInputChange}\n          type=\"text\" />\n        <button type=\"submit\" loading={loading} >Adicionar</button>\n      </form>\n\n\n      <ul style={{ textAlign: 'left' }}>\n        {repositories.map(repository => (\n          <li key={repository.name} style={{ marginBottom: '50px'}} >\n            <div style={{display: 'flex', alignItems: 'center'}}>\n              <img src={repository.avatar} width='50' alt=\"image\" />\n              <h3 style={{ marginLeft: '10px' }} >{repository.name}</h3>\n            </div>\n            <p>{repository.description}  <a href={repository.url}>Acessar Repositório</a> </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","/home/gabriel/github-explorer-as7/src/services/api.js",[],{"ruleId":"21","severity":1,"message":"22","line":1,"column":8,"nodeType":"23","messageId":"24","endLine":1,"endColumn":12},{"ruleId":"25","severity":1,"message":"26","line":58,"column":15,"nodeType":"27","endLine":58,"endColumn":69},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]